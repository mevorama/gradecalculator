Homelay <- as.numeric(Homelay)
Drawback <- xpathSApply(html, "//td[@class='odds back selection-3']//span[@class='price']", xmlValue)
Drawback <- lapply(Drawback, gsub, pattern="\\D", replacement="")
Drawback <- as.numeric(Drawback)
Drawlay <- xpathSApply(html, "//td[@class='odds lay selection-3']//span[@class='price']", xmlValue)
Drawlay <- lapply(Drawlay, gsub, pattern="\\D", replacement="")
Drawlay <- as.numeric(Drawlay)
Awayback <- xpathSApply(html, "//td[@class='odds back selection-3']//span[@class='price']", xmlValue)
Awayback <- lapply(Awayback, gsub, pattern="\\D", replacement="")
Awayback <- as.numeric(Awayback)
Awaylay <- xpathSApply(html, "//td[@class='odds lay selection-3']//span[@class='price']", xmlValue)
Awaylay <- lapply(Awaylay, gsub, pattern="\\D", replacement="")
Awaylay <- as.numeric(Awaylay)
Table <- cbind(Home,Score,Away,Time,Homeback,Homelay,Drawback,Drawlay,Awayback,Awaylay)
Complete <<- rbind(Complete,Table)
}
url<-c()
url[1] <- "http://www.betfair.com/exchange/football/coupon?id=4&goingInPlay=false"
html <- htmlTreeParse(url[1], useInternalNodes=T)
Complete <- data.frame()
filltable(url[1])
i=1
filltable(html)
i=1
while (length(xpathSApply(html, "//a[@class='next-page']", xmlValue)) != 0 && i<3){
i = i+1
url[i] <- paste(url[1], "&fdcPage=", i, sep="")
html <- htmlTreeParse(url[i], useInternalNodes=T)
filltable(html)
}
View(Complete)
?var
1*.1+2*.2+3*.3+4*.4
3/4
1*0.5+1*.5
1*0.5-1*0.5
1^2*0.5+(-1)^2*.5
library(XML)
filltable <- function(html){
Home <- xpathSApply(html, "//span[@class='home-team']", xmlValue)
Score <- xpathSApply(html, "//span[@class='result']", xmlValue)
Away <- xpathSApply(html, "//span[@class='away-team']", xmlValue)
Time <- xpathSApply(html, "//span[@class='start-time period-emphasis']|//span[@class='start-time ']", xmlValue)
Homeback <- xpathSApply(html, "//td[@class='odds back selection-1']//span[@class='price']", xmlValue)
Homeback <- lapply(Homeback, gsub, pattern="\\D", replacement="")
Homeback <- as.numeric(Homeback)
Homelay <- xpathSApply(html, "//td[@class='odds lay selection-1']//span[@class='price']", xmlValue)
Homelay <- lapply(Homelay, gsub, pattern="\\D", replacement="")
Homelay <- as.numeric(Homelay)
Drawback <- xpathSApply(html, "//td[@class='odds back selection-3']//span[@class='price']", xmlValue)
Drawback <- lapply(Drawback, gsub, pattern="\\D", replacement="")
Drawback <- as.numeric(Drawback)
Drawlay <- xpathSApply(html, "//td[@class='odds lay selection-3']//span[@class='price']", xmlValue)
Drawlay <- lapply(Drawlay, gsub, pattern="\\D", replacement="")
Drawlay <- as.numeric(Drawlay)
Awayback <- xpathSApply(html, "//td[@class='odds back selection-3']//span[@class='price']", xmlValue)
Awayback <- lapply(Awayback, gsub, pattern="\\D", replacement="")
Awayback <- as.numeric(Awayback)
Awaylay <- xpathSApply(html, "//td[@class='odds lay selection-3']//span[@class='price']", xmlValue)
Awaylay <- lapply(Awaylay, gsub, pattern="\\D", replacement="")
Awaylay <- as.numeric(Awaylay)
Table <- cbind(Home,Score,Away,Time,Homeback,Homelay,Drawback,Drawlay,Awayback,Awaylay)
Complete <<- rbind(Complete,Table)
}
url<-c()
url[1] <- "http://www.betfair.com/exchange/football/coupon?id=1&goingInPlay=false"
html <- htmlTreeParse(url[1], useInternalNodes=T)
Complete <- data.frame()
filltable(html)
i=1
while (length(xpathSApply(html, "//a[@class='next-page']", xmlValue)) != 0 && i<3){
i = i+1
url[i] <- paste(url[1], "&fdcPage=", i, sep="")
html <- htmlTreeParse(url[i], useInternalNodes=T)
filltable(html)
}
View(Complete)
url<-c()
url[1] <- "http://www.betfair.com/exchange/football/coupon?id=1&goingInPlay=true"
html <- htmlTreeParse(url[1], useInternalNodes=T)
Complete <- data.frame()
filltable(html)
i=1
while (length(xpathSApply(html, "//a[@class='next-page']", xmlValue))){
i = i+1
url[i] <- paste(url[1], "&fdcPage=", i, sep="")
html <- htmlTreeParse(url[i], useInternalNodes=T)
filltable(html)
}
View(Complete)
0.3*0.8/(0.3*0.8+0.1*0.2)
0.75*0.3/(0.75*0.3+0.48*0.7)
0.5^5
6*(0.5^5)
.95*.1
?exp
exp(-15)*((15^16/fac(16)-(15^16/fac(16)))
?fac
?factorial
exp(-15)*((15^16/gamma(17)-(15^14/gamma(15)))
exp(-15)*(15^16/gamma(17)-(15^14/gamma(15)))
exp(-15)*((15^14/gamma(15))-15^16/gamma(17))
sqrt(1/12)
5^10*exp(-5)*3/gamma(11)
gamma(3)
gamma(4)
gamma(10)/(gamma(4)*gamma(7))
rnorm(1, 1100, 75)
mean(rnorm(100, 1100, 75))
x=sapply(rep(100,100), function (x) mean(rnorm(x,1100,75)))
y=sapply(rep(1,100), function (x) mean(rnorm(x,1100,75)))
hist(x, main ="Distribution of Mean of 100 Normally Distributed r.v 100 samples", xlab =paste("SD is",sd(x)))
hist(y, main ="Distribution of 1 Normally Distributed r.v 100 samples", xlab =paste("SD is",sd(y)))
hist(x, main ="Distribution of Mean of 100 Normally Distributed r.v 100 samples", xlab =paste("SD is",sd(x)))
x=sapply(rep(100,100), function (x) mean(rnorm(x,1100,75)))
hist(x, main ="Distribution of Mean of 100 Normally Distributed r.v 100 samples", xlab =paste("SD is",sd(x)))
x=sapply(rep(100,100), function (x) mean(rnorm(x,1100,75)))
hist(x, main ="Distribution of Mean of 100 Normally Distributed r.v 100 samples", xlab =paste("SD is",sd(x)))
sqrt(1/12000)
(1/12)/sqrt(1000)
sqrt((1/12)/sqrt(1000))
sqrt(1/12)/sqrt(1000)
?pnorm
pnorm(68, mean=15, sd=1)
pnorm(0.68, mean=15, sd=1)
pnorm(1, mean=15, sd=1)
pnorm(50, mean=15, sd=1)
qnorm(14, mean=15, sd=1)
qnorm(0.68, mean=15, sd=1)
qnorm(0.9, mean=15, sd=1)
qnorm(0.7, mean=15, sd=1)
qnorm(0.8, mean=15, sd=1)
qnorm(0.85, mean=15, sd=1)
qnorm(0.84, mean=15, sd=1)
qnorm(0.26, mean=15, sd=1)
qnorm(0.3, mean=15, sd=1)
qnorm(0.4, mean=15, sd=1)
qnorm(0.2, mean=15, sd=1)
qnorm(0.16, mean=15, sd=1)
qnorm(0.15, mean=15, sd=1)
0.7/0.8
0.1/0.8
0.125*0.8/(0.125*0.8+0.1*0.2)
?ppois
ppois(10, lambda = 5 * 3)
?qnorm
qnorm(.95, mean = 1100, sd = 75)
qnorm(.95, mean = 1100, sd = 0.75)
0.8*0.8
0.2*0.8/(0.2*0.8+0.2*0.2)
0.125*0.8/(0.125*0.8+0.2*0.2)
0.9/0.2
0.1/0.2
0.125*0.8/(0.125*0.8+0.5*0.2)
0.2*0.5
sqrt(1/1200)
sqrt(1/12000)
qnorm(.95, mean = 1100, sd = 7.5)
library(shiny
)
library(shiny)
install/packages("shiny")
install.packages("shiny")
library(shiny)
library(manipulate)
myHist <- function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu, mu), c(0, 150),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("Imbalance = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
data(galton)
library(galton)
library(HistData)
library(manipulate)
myHist <- function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu, mu), c(0, 150),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("Imbalance = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
data(galton)
library(UsingR)
galton
library(manipulate)
myHist <- function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu, mu), c(0, 150),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("Imbalance = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
myHist <- function(mu){
+     hist(galton$child,col="blue",breaks=100)
+     lines(c(mu, mu), c(0, 150),col="red",lwd=5)
+     mse <- mean((galton$child - mu)^2)
+     text(63, 150, paste("mu = ", mu))
+     text(63, 140, paste("Imbalance = ", round(mse, 2)))
+ }
library(manipulate)
myHist <- function(mu){
+     hist(galton$child,col="blue",breaks=100)
+     lines(c(mu, mu), c(0, 150),col="red",lwd=5)
+     mse <- mean((galton$child - mu)^2)
+     text(63, 150, paste("mu = ", mu))
+     text(63, 140, paste("Imbalance = ", round(mse, 2)))
+ }
myHist
myHist(10)
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
?manipulate
manipulate(myHist(mu), mu = slider(62, 74))
myHist(100)
myHist(200)
install.packages("manipulate")
install.packages("manipulate")
shiny::runApp('R/dataprod/tutorial')
shiny::runApp('R/dataprod/tutorial')
rep("Combined",4)
c(rep("Combined",4))
nrow(Complete)
seq(1,4)
seq(1,nrow(Complete))
l4<-seq(1,4)
l4
paste("Section",l4)
shiny::runApp('R/dataprod/tutorial')
?order
shiny::runApp('R/dataprod/tutorial')
df<-data.frame()
df<-rbind(df,c(0,"zero"))
colnames(df) <- c("value","name")
View(df)
shiny::runApp('R/dataprod/tutorial')
shiny::runApp('R/dataprod/tutorial')
shiny::runApp('R/dataprod/tutorial')
shiny::runApp('R/dataprod/tutorial')
install_github("shiny-incubator", "rstudio")
devtools::install_github("shiny-incubator", "rstudio")
swirl()
install.packages("swirl")
library(swirl)
swirl()
fit <- lm(child ~ parent)
data(galton)
play()
data(galton)
library(UsingR)
data(galton)
nxt()
fit <- lm(child ~ parent)
fit <- lm(galton$child ~ galton$parent)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs-rhs
all.equal(lhs,rhs)
varChild <- var(galton$child)
varRes <- var(fit%residuals)
varRes <- var(fit$residuals)
varEst <- est(ols.slope,ols.ic)
varEst <- var(est(ols.slope,ols.ic))
all.equal(varChild,sum(varRes,varEst))
all.equal(varChild,varRes+varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)==0
mean(efit$residuals)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
fit <- lm(child ~ parent, galton)
sqrt(sum(fit$residuals^2)/(928/2))
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot<-sum((galton$child-mu)^2)
sRes <- deviance(sum(fit$residuals^2))
sRes <- deviance(galton$child - fit)
sRes <- deviance(galton$child)
sRes <- deviance(galton$child, mu)
sRes <- deviance(fit$residuals)
sRes <- deviance(fit$residuals, galton$child)
sRes <- deviance(fit)
R^2 <- 1-(sRes/sTot)
1-(sRes/sTot)
1-sRes/sTot
summary(fit)$r
summary(fit)$r.squared
cor(galton$child, galton$parent)^2
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
beta1<-cor(y,x)*sd(y)/sd(x)
beta0<-mean(y)-beta1*mean(x)
n<-length(y)
e<-y-beta0-beta1*x
sigma<-sqrt(sum(e^2)/(n-2))
ssx<-sum((x-mean(x))^2)
seBeta0<-(1/n+mean(x)^2/ssx)^.5*sigma
seBeta1<-sigma/sqrt(ssx)
tBeta0<-beta0/seBeta0;tBeta1<-beta1/seBeta1
pBeta0<-2*pt(abs(tBeta0),df=n-2,lower.tail=FALSE)
pBeta1<-2*pt(abs(tBeta1),df=n-2,lower.tail=FALSE)
pBeta1
pBeta0
coefTable<-rbind(c(beta0,seBeta0,tBeta0,pBeta0),c(beta1,seBeta1,tBeta1,pBeta1))
colnames(coefTable)<-c("Estimate","Std.Error","tvalue","P(>|t|)")
rownames(coefTable)<-c("(Intercept)","x")
fit<-lm(y~x)
summary(fit)$residuals
sd(summary(fit)$residuals)
var(summary(fit)$residuals)
sqrt(var(summary(fit)$residuals))
fit
coefTable
res <- y - (x*coefTable[2,1]+coefTable[1,1])
sd(res)
var(res)
resid(lm(y~x))
sd(resid(lm(y~x)))
sqrt()resid(lm(y~x))^2)/(n-2))
sqrt((resid(lm(y~x))^2)/(n-2))
sqrt(sum(resid(lm(y~x))^2)/(n-2))
with(mtcars)
data(mtcars)
head(mtcars)
carfit <- lm(weight ~ outcome)
carfit <- lm(mtcars$weight ~ mtcars$outcome)
carfit <- lm(outcome ~ weight, mtcars)
carfit <- lm(mpg ~ weight, mtcars)
carfit <- lm(mpg ~ wt, mtcars)
carfit
sumCoef<-summary(carfit)$coefficients
sumCoef
sumCoef[1,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[1,2]
sumCoef[2,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[2,2]
meanwt <- mean(mtcars$wt)
predict(carfit, meanwt, interval=("confidence"))
xVals<-mtcars$wt
yVals<-mtcars$mpg
se1<-sigma*sqrt(1/n+(xVals-mean(x))^2/ssx)
se2<-sigma*sqrt(1+1/n+(xVals-mean(x))^2/ssx)
meanwt -2*se1
sumCoef[1,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[1,2] + meanwt
(sumCoef[2,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[2,2])*meanwt
(sumCoef[1,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[1,2])*meanwt
sumCoef
in <- sumCoef[1,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[1,2]
ic <- sumCoef[1,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[1,2]
co <- sumCoef[2,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[2,2]
meanwt*co + ic
co <- sumCoef[2,1]+c(-1,1)*qt(.975,df=carfit$df)*sumCoef[2,2]
ic <- sumCoef[1,1]+c(-1,1)*qt(.975,df=carfit$df)*sumCoef[1,2]
meanwt*co + ic
recarfit <- lm(wt ~ mpg, mtcars)
co2 <- sumCoef[2,1]+c(-1,1)*qt(.975,df=carfit$df)*sumCoef[2,2]
ic2 <- sumCoef[1,1]+c(-1,1)*qt(.975,df=carfit$df)*sumCoef[1,2]
meanwt*co2 + ic2
co2 <- sumCoef[2,1]+c(-1,1)*qt(.975,df=recarfit$df)*sumCoef[2,2]
ic2 <- sumCoef[1,1]+c(-1,1)*qt(.975,df=recarfit$df)*sumCoef[1,2]
meanwt*co2 + ic2
sumCoef<-summary(recarfit)$coefficients
co2 <- sumCoef[2,1]+c(-1,1)*qt(.975,df=recarfit$df)*sumCoef[2,2]
> ic2 <- sumCoef[1,1]+c(-1,1)*qt(.975,df=recarfit$df)*sumCoef[1,2]
> meanwt*co2 + ic2
co2 <- sumCoef[2,1]+c(-1,1)*qt(.975,df=recarfit$df)*sumCoef[2,2]
ic2 <- sumCoef[1,1]+c(-1,1)*qt(.975,df=recarfit$df)*sumCoef[1,2]
meanwt*co2 + ic2
meanwt*sumCoef[2,1]+sumCoef[1,1]
sumCoef
sumCoef2<-summary(recarfit)$coefficients
sumCoef<-summary(carfit)$coefficients
meanwt*sumCoef[2,1]+sumCoef[1,1]
meanwt*(sumCoef[2,1]-qt(.975,df=recarfit$df)*sumCoef[2,2])+sumCoef[1,1]-qt(.975,df=recarfit$df)*sumCoef[1,2]
n
n=nrow(mtcars)
newdata<-data.frame(wt=mean(mtcars$wt))
predict(carfit,newdata,interval = ("prediction"))
predict(carfit,newdata,interval = ("confidence"))
ic <- sumCoef[1,1]+c(-1,1)*qt(.975,df=carfit$df)*sumCoef[1,2]
co <- sumCoef[2,1]+c(-1,1)*qt(.975,df=carfit$df)*sumCoef[2,2]
meanwt*co+ic
meanwt*co
meanwt*ic
carfit
meanwt*co+sumCoef[1,1]
meanwt*co+(sumCoef[1,1]+c(1,-1)*qt(.975,df=carfit$df)*sumCoef[1,2])
newdata<-data.frame(wt=3)
predict(carfit,newdata,interval = ("confidence"))
newdata<-data.frame(wt=3)
predict(carfit,newdata,interval = ("prediction"))
newdata<-data.frame(wt=2)
predict(carfit,newdata,interval = ("confidence"))
co
2*co
Y <- mtcars$mpg
Y_hat <- mtcars$wt*sumCoef[2,1]+sumCoef[1,1]
sum((Y-Y_hat)^2)
m1 <- sum((Y-Y_hat)^2)
carfit2 <- lm(mpg ~ wt-1,mtcars)
carfit2
summary(cafit2)$coefficients
summary(carfit2)$coefficients
summary(carfit2)$coefficients[1]
Y_hat2 <- mtcars$wt*summary(carfit2)$coefficients[1]
m2 <- sum((Y-Y_hat2)^2)
m1/m2
Y_hat2 <- mean(mtcars$mpg)
m2 <- sum((Y-Y_hat2)^2)
m1/m2
install.packages("devtools")
library(devtools)
install.packages("UsingR")
library(UsingR)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
setwd("./R/dataprod")
author("pitch_deck")
slidify("index.html")
setwd("./pitch_deck")
slidify("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
(50.4*2+49*3)/3
(50*2+49*3)/3
(50.4*2+49*3)/5
(50*2+49*3)/5
(50.4*3+49*2)/5
(50*3+49*2)/5
(50.4*3+49*1)/4
(50*3+49*1)/4
(50.4*3+49.4*1)/4
(50*3+49*1)/4
(50.4*1+49.4*3)/4
(50*1+49*3)/4
(50.4*1+49.4*2)/3
(50*1+49*2)/3
(50.4*2+49.4*1)/3
(50*2+49*1)/3
(50.4*1+49.4*2)/3
(50*1+49*2)/3
(50.4*2+49.4*3)/5
(50*2+49*3)/5
(50.4*2+49.4*2)/5
(50*3+49*2)/5
(50.4*3+49.4*2)/5
(50*3+49*2)/5
(50.4*3+49.6*2)/5
(50*3+49*2)/5
(50.4*3+49.6*2)/5
(50*3+50*2)/5
(50.4*3+49.4*2)/5
(50*3+49*2)/5
(49.6*3+48.4*2)/5
(50.4*2+49.4*1)/3
(49.6*2+48.4*1)/3
mean(50.4,50.4)
mean(49.6,49.6)
(50.4*10+60*1)/11
(50.4*10+40*1)/11
(50.4*10+45*1)/11
(50.4*10+49*1)/11
(50*10+49*1)/11
(50.4*100+49*1)/101
(50.4*2+49*1)/3
(50*10+49*1)/11
(50*2+49*1)/3
(50*2+49*1)/3
data.frame(C(1,2,3),c(75,65,55),c(15,19.5,27.5))
as.data.frame(c(C(1,2,3),c(75,65,55),c(15,19.5,27.5)))
section<-c(C(1,2,3);average<-c(75,65,55);height<-c(15,19.5,27.5)))
section<-c(1,2,3);average<-c(75,65,55);height<-c(15,19.5,27.5)))
section<-c(1,2,3);average<-c(75,65,55);height<-c(15,19.5,27.5)
df<-data.frame(section,average,height)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
